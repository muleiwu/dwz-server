.git-clone: &git-clone
  name: git-clone
  git:
    enable: true
    submodules: true

.build-amd64: &build-amd64
  name: build-amd64
  runner:
    tags: cnb:arch:amd64
  services:
    - docker
  env:
    IMAGE_TAG: ${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}:${CNB_COMMIT}-linux-amd64
  stages:
    - name: docker login
      script: docker login -u ${CNB_TOKEN_USER_NAME} -p "${CNB_TOKEN}" ${CNB_DOCKER_REGISTRY}
    - name: docker build
      script: docker build -t ${IMAGE_TAG} .
    - name: docker push
      script: docker push ${IMAGE_TAG}
    - name: resolve
      type: cnb:resolve
      options:
        key: build-amd64

.build-arm: &build-arm
  name: build-arm
  runner:
    tags: cnb:arch:arm64:v8
  services:
    - docker
  env:
    IMAGE_TAG: ${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}:${CNB_COMMIT}-linux-arm64
  stages:
    - name: docker login
      script: docker login -u ${CNB_TOKEN_USER_NAME} -p "${CNB_TOKEN}" ${CNB_DOCKER_REGISTRY}
    - name: docker build
      script: docker build -t ${IMAGE_TAG} .
    - name: docker push
      script: docker push ${IMAGE_TAG}
    - name: resolve
      type: cnb:resolve
      options:
        key: build-arm64
.build-loong64: &build-loong64
  name: build-loong64
  env:
    IMAGE_TAG: ${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}:${CNB_COMMIT}-linux-loong64
  docker:
    image: node:22-slim
  runner:
    tags: cnb:arch:amd64:containerd-snapshotter
  services:
    - docker
  stages:
    - name: setting-env
      script:
        - apt-get update -y
        - apt-get install --reinstall ca-certificates -y
    - name: build-web
      script:
        - cd ./admin-webui
        - npm config set registry http://mirrors.tencent.com/npm/ && npm i -g corepack
        - pnpm config set registry https://mirrors.cloud.tencent.com/npm/ && pnpm install && pnpm run build:antd --filter=\!./docs
    # 云原生构建自动构建Docker镜像并将它发布到制品库
    - name: docker login
      script:
        - docker login -u ${CNB_TOKEN_USER_NAME} -p "${CNB_TOKEN}" ${CNB_DOCKER_REGISTRY}
    - name: docker build && push
      script: |
        docker buildx build --platform linux/loong64 \
          -f Dockerfile.loong64 \
          -t ${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}:${CNB_COMMIT}-linux-loong64 \
          --push .
    - name: resolve
      type: cnb:resolve
      options:
        key: build-loong64
.build-bin: &build-bin
  name: build-bin
  runner:
    tags: cnb:arch:amd64
  services:
    - docker
  docker:
    image: docker.cnb.cool/mliev/open/node-go:node22-pnpm-go1.25.2
  stages:
    - name: build-web
      script:
        - cd ./admin-webui
        - pnpm config set registry https://mirrors.cloud.tencent.com/npm/ && pnpm install && pnpm run build:antd --filter=\!./docs
        - cd .. && mkdir -p ./static/admin && cp -a ./admin-webui/apps/web-antd/dist ./static/admin
    - name: changelog
      image: cnbcool/changelog
      exports:
        latestChangeLog: LATEST_CHANGE_LOG
    - name: create release
      type: git:release
      options:
        title: ${CNB_BRANCH}
        description: ${LATEST_CHANGE_LOG}
    - name: go mod
      script: go mod vendor
    - name: go build
      script: goreleaser release --snapshot --clean
    - name: release 上传附件
      image: cnbcool/attachments:latest
      settings:
        attachments:
          - ./dist/dwz-server_Darwin_arm64.tar.gz
          - ./dist/dwz-server_Darwin_x86_64.tar.gz
          - ./dist/dwz-server_Linux_arm64.tar.gz
          - ./dist/dwz-server_Linux_armv5.tar.gz
          - ./dist/dwz-server_Linux_armv6.tar.gz
          - ./dist/dwz-server_Linux_armv7.tar.gz
          - ./dist/dwz-server_Linux_loong64.tar.gz
          - ./dist/dwz-server_Linux_x86_64.tar.gz
          - ./dist/checksums.txt
      exports:
        FILES: FILES
    - name: 输出附件
      script: echo $FILES
    - name: resolve
      type: cnb:resolve
      options:
        key: build-bin
develop:
  push:
    - <<: *git-clone
    - <<: *build-arm
    - <<: *build-amd64

    - services:
        - docker
      name: "push"
      env:
        IMAGE_NAME: ${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}
      stages:
        - name: await the amd64
          type: cnb:await
          options:
            key: build-amd64
        - name: await the arm64
          type: cnb:await
          options:
            key: build-arm64
        - name: manifest
          image: cnbcool/manifest
          settings:
            target: ${IMAGE_NAME}:${CNB_BRANCH}
            template: ${IMAGE_NAME}:${CNB_COMMIT}-OS-ARCH
            platforms:
              - linux/amd64
              - linux/arm64
        - name: remove tag
          type: artifact:remove-tag
          options:
            name: ${CNB_REPO_NAME}
            tags:
              - ${CNB_COMMIT}-linux-amd64
              - ${CNB_COMMIT}-linux-arm64
            type: docker

$:
  tag_push:
    - <<: *git-clone
    - <<: *build-amd64
    - <<: *build-arm
    - <<: *build-bin
    - services:
        - docker
      name: "push"
      env:
        IMAGE_NAME: ${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}
      stages:
        - name: await the amd64
          type: cnb:await
          options:
            key: build-amd64
        - name: await the arm64
          type: cnb:await
          options:
            key: build-arm64
        - name: await the build-bin
          type: cnb:await
          options:
            key: build-bin
        - name: manifest latest
          image: cnbcool/manifest
          settings:
            target: ${IMAGE_NAME}:latest
            template: ${IMAGE_NAME}:${CNB_COMMIT}-OS-ARCH
            platforms:
              - linux/amd64
              - linux/arm64
        - name: manifest version
          image: cnbcool/manifest
          settings:
            target: ${IMAGE_NAME}:${CNB_BRANCH}
            template: ${IMAGE_NAME}:${CNB_COMMIT}-OS-ARCH
            platforms:
              - linux/amd64
              - linux/arm64
        - name: remove tag
          type: artifact:remove-tag
          options:
            name: ${CNB_REPO_NAME}
            tags:
              - ${CNB_COMMIT}-linux-amd64
              - ${CNB_COMMIT}-linux-arm64
            type: docker
